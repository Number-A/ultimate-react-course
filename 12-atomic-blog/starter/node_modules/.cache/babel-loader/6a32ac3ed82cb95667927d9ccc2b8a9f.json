{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Theo\\\\Documents\\\\GitHub\\\\ultimate-react-course\\\\12-atomic-blog\\\\starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { faker } from \"@faker-js/faker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createRandomPost() {\n  return {\n    title: `${faker.hacker.adjective()} ${faker.hacker.noun()}`,\n    body: faker.hacker.phrase()\n  };\n} // 1) CREATE A CONTEXT\n\n\nconst PostContext = /*#__PURE__*/createContext();\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState(() => Array.from({\n    length: 30\n  }, () => createRandomPost()));\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [isFakeDark, setIsFakeDark] = useState(false); // Derived state. These are the posts that will actually be displayed\n\n  const searchedPosts = searchQuery.length > 0 ? posts.filter(post => `${post.title} ${post.body}`.toLowerCase().includes(searchQuery.toLowerCase())) : posts;\n\n  function handleAddPost(post) {\n    setPosts(posts => [post, ...posts]);\n  }\n\n  function handleClearPosts() {\n    setPosts([]);\n  } // Whenever `isFakeDark` changes, we toggle the `fake-dark-mode` class on the HTML element (see in \"Elements\" dev tool).\n\n\n  useEffect(function () {\n    document.documentElement.classList.toggle(\"fake-dark-mode\");\n  }, [isFakeDark]);\n  return (\n    /*#__PURE__*/\n    // 2) PROVIDE VALUE TO CHILD COMPONENTS\n    _jsxDEV(PostContext.Provider, {\n      value: {\n        posts: searchedPosts,\n        onClearPosts: handleClearPosts,\n        onAddPost: handleAddPost,\n        searchQuery,\n        setSearchQuery\n      },\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsFakeDark(isFakeDark => !isFakeDark),\n          className: \"btn-fake-dark-mode\",\n          children: isFakeDark ? \"☀️\" : \"🌙\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          posts: searchedPosts,\n          onAddPost: handleAddPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Archive, {\n          onAddPost: handleAddPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"V2lkGbx2rVfqgoyOv8F3EtUWfek=\");\n\n_c = App;\n\nfunction Header() {\n  _s2();\n\n  const x = useContext(PostContext);\n  console.log(x);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u269B\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), \"The Atomic Blog\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Header, \"untY9C4gP9QwYZtayibWz8iAgQw=\");\n\n_c2 = Header;\n\nfunction SearchPosts(_ref) {\n  let {\n    searchQuery,\n    setSearchQuery\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: searchQuery,\n    onChange: e => setSearchQuery(e.target.value),\n    placeholder: \"Search posts...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = SearchPosts;\n\nfunction Results(_ref2) {\n  let {\n    posts\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\uD83D\\uDE80 \", posts.length, \" atomic posts found\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 10\n  }, this);\n}\n\n_c4 = Results;\n\nfunction Main(_ref3) {\n  let {\n    posts,\n    onAddPost\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(FormAddPost, {\n      onAddPost: onAddPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Posts, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = Main;\n\nfunction Posts(_ref4) {\n  let {\n    posts\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_c6 = Posts;\n\nfunction FormAddPost(_ref5) {\n  _s3();\n\n  let {\n    onAddPost\n  } = _ref5;\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const handleSubmit = function (e) {\n    e.preventDefault();\n    if (!body || !title) return;\n    onAddPost({\n      title,\n      body\n    });\n    setTitle(\"\");\n    setBody(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Post title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: body,\n      onChange: e => setBody(e.target.value),\n      placeholder: \"Post body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(FormAddPost, \"6HXhu2MyhlZpOMFDXlcyR7kq/h8=\");\n\n_c7 = FormAddPost;\n\nfunction List(_ref6) {\n  let {\n    posts\n  } = _ref6;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: posts.map((post, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n\n_c8 = List;\n\nfunction Archive(_ref7) {\n  _s4();\n\n  let {\n    onAddPost\n  } = _ref7;\n  // Here we don't need the setter function. We're only using state to store these posts because the callback function passed into useState (which generates the posts) is only called once, on the initial render. So we use this trick as an optimization technique, because if we just used a regular variable, these posts would be re-created on every render. We could also move the posts outside the components, but I wanted to show you this trick 😉\n  const [posts] = useState(() => // 💥 WARNING: This might make your computer slow! Try a smaller `length` first\n  Array.from({\n    length: 10000\n  }, () => createRandomPost()));\n  const [showArchive, setShowArchive] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post archive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowArchive(s => !s),\n      children: showArchive ? \"Hide archive posts\" : \"Show archive posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), showArchive && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map((post, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [post.title, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this), \" \", post.body]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onAddPost(post),\n          children: \"Add as new post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(Archive, \"wluHEHA8hL6baK4QxyrkvxBHlXk=\");\n\n_c9 = Archive;\n\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: \"\\xA9 by The Atomic Blog \\u270C\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 10\n  }, this);\n}\n\n_c10 = Footer;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"SearchPosts\");\n$RefreshReg$(_c4, \"Results\");\n$RefreshReg$(_c5, \"Main\");\n$RefreshReg$(_c6, \"Posts\");\n$RefreshReg$(_c7, \"FormAddPost\");\n$RefreshReg$(_c8, \"List\");\n$RefreshReg$(_c9, \"Archive\");\n$RefreshReg$(_c10, \"Footer\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","faker","createRandomPost","title","hacker","adjective","noun","body","phrase","PostContext","App","posts","setPosts","Array","from","length","searchQuery","setSearchQuery","isFakeDark","setIsFakeDark","searchedPosts","filter","post","toLowerCase","includes","handleAddPost","handleClearPosts","document","documentElement","classList","toggle","onClearPosts","onAddPost","Header","x","console","log","SearchPosts","e","target","value","Results","Main","Posts","FormAddPost","setTitle","setBody","handleSubmit","preventDefault","List","map","i","Archive","showArchive","setShowArchive","s","Footer"],"sources":["C:/Users/Theo/Documents/GitHub/ultimate-react-course/12-atomic-blog/starter/src/App.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { faker } from \"@faker-js/faker\";\r\n\r\nfunction createRandomPost() {\r\n  return {\r\n    title: `${faker.hacker.adjective()} ${faker.hacker.noun()}`,\r\n    body: faker.hacker.phrase(),\r\n  };\r\n}\r\n\r\n// 1) CREATE A CONTEXT\r\nconst PostContext = createContext();\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState(() =>\r\n    Array.from({ length: 30 }, () => createRandomPost())\r\n  );\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isFakeDark, setIsFakeDark] = useState(false);\r\n\r\n  // Derived state. These are the posts that will actually be displayed\r\n  const searchedPosts =\r\n    searchQuery.length > 0\r\n      ? posts.filter((post) =>\r\n          `${post.title} ${post.body}`\r\n            .toLowerCase()\r\n            .includes(searchQuery.toLowerCase())\r\n        )\r\n      : posts;\r\n\r\n  function handleAddPost(post) {\r\n    setPosts((posts) => [post, ...posts]);\r\n  }\r\n\r\n  function handleClearPosts() {\r\n    setPosts([]);\r\n  }\r\n\r\n  // Whenever `isFakeDark` changes, we toggle the `fake-dark-mode` class on the HTML element (see in \"Elements\" dev tool).\r\n  useEffect(\r\n    function () {\r\n      document.documentElement.classList.toggle(\"fake-dark-mode\");\r\n    },\r\n    [isFakeDark]\r\n  );\r\n\r\n  return (\r\n    // 2) PROVIDE VALUE TO CHILD COMPONENTS\r\n    <PostContext.Provider\r\n      value={{\r\n        posts: searchedPosts,\r\n        onClearPosts: handleClearPosts,\r\n        onAddPost: handleAddPost,\r\n        searchQuery,\r\n        setSearchQuery,\r\n      }}\r\n    >\r\n      <section>\r\n        <button\r\n          onClick={() => setIsFakeDark((isFakeDark) => !isFakeDark)}\r\n          className=\"btn-fake-dark-mode\"\r\n        >\r\n          {isFakeDark ? \"☀️\" : \"🌙\"}\r\n        </button>\r\n\r\n        <Header />\r\n        <Main posts={searchedPosts} onAddPost={handleAddPost} />\r\n        <Archive onAddPost={handleAddPost} />\r\n        <Footer />\r\n      </section>\r\n    </PostContext.Provider>\r\n  );\r\n}\r\n\r\nfunction Header() {\r\n  const x = useContext(PostContext);\r\n  console.log(x);\r\n\r\n  return (\r\n    <header>\r\n      <h1>\r\n        <span>⚛️</span>The Atomic Blog\r\n      </h1>\r\n      <div>\r\n        {/* <Results />\r\n        <SearchPosts />\r\n        <button onClick={onClearPosts}>Clear posts</button> */}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nfunction SearchPosts({ searchQuery, setSearchQuery }) {\r\n  return (\r\n    <input\r\n      value={searchQuery}\r\n      onChange={(e) => setSearchQuery(e.target.value)}\r\n      placeholder=\"Search posts...\"\r\n    />\r\n  );\r\n}\r\n\r\nfunction Results({ posts }) {\r\n  return <p>🚀 {posts.length} atomic posts found</p>;\r\n}\r\n\r\nfunction Main({ posts, onAddPost }) {\r\n  return (\r\n    <main>\r\n      <FormAddPost onAddPost={onAddPost} />\r\n      <Posts posts={posts} />\r\n    </main>\r\n  );\r\n}\r\n\r\nfunction Posts({ posts }) {\r\n  return (\r\n    <section>\r\n      <List posts={posts} />\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction FormAddPost({ onAddPost }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n\r\n  const handleSubmit = function (e) {\r\n    e.preventDefault();\r\n    if (!body || !title) return;\r\n    onAddPost({ title, body });\r\n    setTitle(\"\");\r\n    setBody(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        placeholder=\"Post title\"\r\n      />\r\n      <textarea\r\n        value={body}\r\n        onChange={(e) => setBody(e.target.value)}\r\n        placeholder=\"Post body\"\r\n      />\r\n      <button>Add post</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction List({ posts }) {\r\n  return (\r\n    <ul>\r\n      {posts.map((post, i) => (\r\n        <li key={i}>\r\n          <h3>{post.title}</h3>\r\n          <p>{post.body}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction Archive({ onAddPost }) {\r\n  // Here we don't need the setter function. We're only using state to store these posts because the callback function passed into useState (which generates the posts) is only called once, on the initial render. So we use this trick as an optimization technique, because if we just used a regular variable, these posts would be re-created on every render. We could also move the posts outside the components, but I wanted to show you this trick 😉\r\n  const [posts] = useState(() =>\r\n    // 💥 WARNING: This might make your computer slow! Try a smaller `length` first\r\n    Array.from({ length: 10000 }, () => createRandomPost())\r\n  );\r\n\r\n  const [showArchive, setShowArchive] = useState(false);\r\n\r\n  return (\r\n    <aside>\r\n      <h2>Post archive</h2>\r\n      <button onClick={() => setShowArchive((s) => !s)}>\r\n        {showArchive ? \"Hide archive posts\" : \"Show archive posts\"}\r\n      </button>\r\n\r\n      {showArchive && (\r\n        <ul>\r\n          {posts.map((post, i) => (\r\n            <li key={i}>\r\n              <p>\r\n                <strong>{post.title}:</strong> {post.body}\r\n              </p>\r\n              <button onClick={() => onAddPost(post)}>Add as new post</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </aside>\r\n  );\r\n}\r\n\r\nfunction Footer() {\r\n  return <footer>&copy; by The Atomic Blog ✌️</footer>;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}