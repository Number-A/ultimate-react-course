{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Theo\\\\Documents\\\\GitHub\\\\ultimate-react-course\\\\12-atomic-blog\\\\starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { faker } from \"@faker-js/faker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createRandomPost() {\n  return {\n    title: `${faker.hacker.adjective()} ${faker.hacker.noun()}`,\n    body: faker.hacker.phrase()\n  };\n} // 1) CREATE A CONTEXT\n\n\nconst PostContext = /*#__PURE__*/createContext();\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState(() => Array.from({\n    length: 30\n  }, () => createRandomPost()));\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [isFakeDark, setIsFakeDark] = useState(false); // Derived state. These are the posts that will actually be displayed\n\n  const searchedPosts = searchQuery.length > 0 ? posts.filter(post => `${post.title} ${post.body}`.toLowerCase().includes(searchQuery.toLowerCase())) : posts;\n\n  function handleAddPost(post) {\n    setPosts(posts => [post, ...posts]);\n  }\n\n  function handleClearPosts() {\n    setPosts([]);\n  } // Whenever `isFakeDark` changes, we toggle the `fake-dark-mode` class on the HTML element (see in \"Elements\" dev tool).\n\n\n  useEffect(function () {\n    document.documentElement.classList.toggle(\"fake-dark-mode\");\n  }, [isFakeDark]);\n  return (\n    /*#__PURE__*/\n    // 2) PROVIDE VALUE TO CHILD COMPONENTS\n    _jsxDEV(PostContext.Provider, {\n      value: {\n        posts: searchedPosts,\n        onClearPosts: handleClearPosts,\n        onAddPost: handleAddPost,\n        searchQuery,\n        setSearchQuery\n      },\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsFakeDark(isFakeDark => !isFakeDark),\n          className: \"btn-fake-dark-mode\",\n          children: isFakeDark ? \"☀️\" : \"🌙\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          posts: searchedPosts,\n          onAddPost: handleAddPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Archive, {\n          onAddPost: handleAddPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"V2lkGbx2rVfqgoyOv8F3EtUWfek=\");\n\n_c = App;\n\nfunction Header() {\n  _s2();\n\n  // 3) CONSUMING THE CONTEXT VALUE\n  const {\n    onClearPosts\n  } = useContext(PostContext);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u269B\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), \"The Atomic Blog\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Results, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchPosts, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClearPosts,\n        children: \"Clear posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Header, \"N86NTqNj/Ugj8SMFZ+2IUnyzUSA=\");\n\n_c2 = Header;\n\nfunction SearchPosts() {\n  _s3();\n\n  const {\n    searchQuery,\n    setSearchQuery\n  } = useContext(PostContext);\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: searchQuery,\n    onChange: e => setSearchQuery(e.target.value),\n    placeholder: \"Search posts...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(SearchPosts, \"BLpRAXPgpF7Y0m7TJaTpFRU0Gvo=\");\n\n_c3 = SearchPosts;\n\nfunction Results() {\n  _s4();\n\n  const {\n    posts\n  } = useContext(PostContext);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\uD83D\\uDE80 \", posts.length, \" atomic posts found\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 10\n  }, this);\n}\n\n_s4(Results, \"HJzIqX8tD7UFv6WrvlK0x2fzJA4=\");\n\n_c4 = Results;\n\nfunction Main() {\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(FormAddPost, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Posts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = Main;\n\nfunction Posts() {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_c6 = Posts;\n\nfunction FormAddPost() {\n  _s5();\n\n  const {\n    onAddPost\n  } = useContext(PostContext);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const handleSubmit = function (e) {\n    e.preventDefault();\n    if (!body || !title) return;\n    onAddPost({\n      title,\n      body\n    });\n    setTitle(\"\");\n    setBody(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Post title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: body,\n      onChange: e => setBody(e.target.value),\n      placeholder: \"Post body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n\n_s5(FormAddPost, \"IeWp+hyxxEF3waZFveDvijlGrQM=\");\n\n_c7 = FormAddPost;\n\nfunction List() {\n  _s6();\n\n  const {\n    posts\n  } = useContext(PostContext);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: posts.map((post, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n\n_s6(List, \"HJzIqX8tD7UFv6WrvlK0x2fzJA4=\");\n\n_c8 = List;\n\nfunction Archive() {\n  _s7();\n\n  const {\n    onAddPost\n  } = useContext(PostContext); // Here we don't need the setter function. We're only using state to store these posts because the callback function passed into useState (which generates the posts) is only called once, on the initial render. So we use this trick as an optimization technique, because if we just used a regular variable, these posts would be re-created on every render. We could also move the posts outside the components, but I wanted to show you this trick 😉\n\n  const [posts] = useState(() => // 💥 WARNING: This might make your computer slow! Try a smaller `length` first\n  Array.from({\n    length: 10000\n  }, () => createRandomPost()));\n  const [showArchive, setShowArchive] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post archive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowArchive(s => !s),\n      children: showArchive ? \"Hide archive posts\" : \"Show archive posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), showArchive && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map((post, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [post.title, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this), \" \", post.body]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onAddPost(post),\n          children: \"Add as new post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n\n_s7(Archive, \"T5i6DUFMd3u7H9Ka5FqLBG+2pzo=\");\n\n_c9 = Archive;\n\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: \"\\xA9 by The Atomic Blog \\u270C\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 10\n  }, this);\n}\n\n_c10 = Footer;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"SearchPosts\");\n$RefreshReg$(_c4, \"Results\");\n$RefreshReg$(_c5, \"Main\");\n$RefreshReg$(_c6, \"Posts\");\n$RefreshReg$(_c7, \"FormAddPost\");\n$RefreshReg$(_c8, \"List\");\n$RefreshReg$(_c9, \"Archive\");\n$RefreshReg$(_c10, \"Footer\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","faker","createRandomPost","title","hacker","adjective","noun","body","phrase","PostContext","App","posts","setPosts","Array","from","length","searchQuery","setSearchQuery","isFakeDark","setIsFakeDark","searchedPosts","filter","post","toLowerCase","includes","handleAddPost","handleClearPosts","document","documentElement","classList","toggle","onClearPosts","onAddPost","Header","SearchPosts","e","target","value","Results","Main","Posts","FormAddPost","setTitle","setBody","handleSubmit","preventDefault","List","map","i","Archive","showArchive","setShowArchive","s","Footer"],"sources":["C:/Users/Theo/Documents/GitHub/ultimate-react-course/12-atomic-blog/starter/src/App.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { faker } from \"@faker-js/faker\";\r\n\r\nfunction createRandomPost() {\r\n  return {\r\n    title: `${faker.hacker.adjective()} ${faker.hacker.noun()}`,\r\n    body: faker.hacker.phrase(),\r\n  };\r\n}\r\n\r\n// 1) CREATE A CONTEXT\r\nconst PostContext = createContext();\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState(() =>\r\n    Array.from({ length: 30 }, () => createRandomPost())\r\n  );\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isFakeDark, setIsFakeDark] = useState(false);\r\n\r\n  // Derived state. These are the posts that will actually be displayed\r\n  const searchedPosts =\r\n    searchQuery.length > 0\r\n      ? posts.filter((post) =>\r\n          `${post.title} ${post.body}`\r\n            .toLowerCase()\r\n            .includes(searchQuery.toLowerCase())\r\n        )\r\n      : posts;\r\n\r\n  function handleAddPost(post) {\r\n    setPosts((posts) => [post, ...posts]);\r\n  }\r\n\r\n  function handleClearPosts() {\r\n    setPosts([]);\r\n  }\r\n\r\n  // Whenever `isFakeDark` changes, we toggle the `fake-dark-mode` class on the HTML element (see in \"Elements\" dev tool).\r\n  useEffect(\r\n    function () {\r\n      document.documentElement.classList.toggle(\"fake-dark-mode\");\r\n    },\r\n    [isFakeDark]\r\n  );\r\n\r\n  return (\r\n    // 2) PROVIDE VALUE TO CHILD COMPONENTS\r\n    <PostContext.Provider\r\n      value={{\r\n        posts: searchedPosts,\r\n        onClearPosts: handleClearPosts,\r\n        onAddPost: handleAddPost,\r\n        searchQuery,\r\n        setSearchQuery,\r\n      }}\r\n    >\r\n      <section>\r\n        <button\r\n          onClick={() => setIsFakeDark((isFakeDark) => !isFakeDark)}\r\n          className=\"btn-fake-dark-mode\"\r\n        >\r\n          {isFakeDark ? \"☀️\" : \"🌙\"}\r\n        </button>\r\n\r\n        <Header />\r\n        <Main posts={searchedPosts} onAddPost={handleAddPost} />\r\n        <Archive onAddPost={handleAddPost} />\r\n        <Footer />\r\n      </section>\r\n    </PostContext.Provider>\r\n  );\r\n}\r\n\r\nfunction Header() {\r\n  // 3) CONSUMING THE CONTEXT VALUE\r\n  const { onClearPosts } = useContext(PostContext);\r\n\r\n  return (\r\n    <header>\r\n      <h1>\r\n        <span>⚛️</span>The Atomic Blog\r\n      </h1>\r\n      <div>\r\n        <Results />\r\n        <SearchPosts />\r\n        <button onClick={onClearPosts}>Clear posts</button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nfunction SearchPosts() {\r\n  const { searchQuery, setSearchQuery } = useContext(PostContext);\r\n  return (\r\n    <input\r\n      value={searchQuery}\r\n      onChange={(e) => setSearchQuery(e.target.value)}\r\n      placeholder=\"Search posts...\"\r\n    />\r\n  );\r\n}\r\n\r\nfunction Results() {\r\n  const { posts } = useContext(PostContext);\r\n  return <p>🚀 {posts.length} atomic posts found</p>;\r\n}\r\n\r\nfunction Main() {\r\n  return (\r\n    <main>\r\n      <FormAddPost />\r\n      <Posts />\r\n    </main>\r\n  );\r\n}\r\n\r\nfunction Posts() {\r\n  return (\r\n    <section>\r\n      <List />\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction FormAddPost() {\r\n  const { onAddPost } = useContext(PostContext);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n\r\n  const handleSubmit = function (e) {\r\n    e.preventDefault();\r\n    if (!body || !title) return;\r\n    onAddPost({ title, body });\r\n    setTitle(\"\");\r\n    setBody(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        placeholder=\"Post title\"\r\n      />\r\n      <textarea\r\n        value={body}\r\n        onChange={(e) => setBody(e.target.value)}\r\n        placeholder=\"Post body\"\r\n      />\r\n      <button>Add post</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction List() {\r\n  const { posts } = useContext(PostContext);\r\n  return (\r\n    <ul>\r\n      {posts.map((post, i) => (\r\n        <li key={i}>\r\n          <h3>{post.title}</h3>\r\n          <p>{post.body}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction Archive() {\r\n  const { onAddPost } = useContext(PostContext);\r\n  // Here we don't need the setter function. We're only using state to store these posts because the callback function passed into useState (which generates the posts) is only called once, on the initial render. So we use this trick as an optimization technique, because if we just used a regular variable, these posts would be re-created on every render. We could also move the posts outside the components, but I wanted to show you this trick 😉\r\n  const [posts] = useState(() =>\r\n    // 💥 WARNING: This might make your computer slow! Try a smaller `length` first\r\n    Array.from({ length: 10000 }, () => createRandomPost())\r\n  );\r\n\r\n  const [showArchive, setShowArchive] = useState(false);\r\n\r\n  return (\r\n    <aside>\r\n      <h2>Post archive</h2>\r\n      <button onClick={() => setShowArchive((s) => !s)}>\r\n        {showArchive ? \"Hide archive posts\" : \"Show archive posts\"}\r\n      </button>\r\n\r\n      {showArchive && (\r\n        <ul>\r\n          {posts.map((post, i) => (\r\n            <li key={i}>\r\n              <p>\r\n                <strong>{post.title}:</strong> {post.body}\r\n              </p>\r\n              <button onClick={() => onAddPost(post)}>Add as new post</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </aside>\r\n  );\r\n}\r\n\r\nfunction Footer() {\r\n  return <footer>&copy; by The Atomic Blog ✌️</footer>;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}